Переход в режим конфигурации

conf
Запуск команд из режима конфигурации

run команда
Просмотр конфигурации

show секция конфигурации
Пример - показать настроенные протоколы маршрутизации:

show protocols
Пример - установить адрес 192.168.0.1/24 на интерфейс eth0

set interface ethernet eth0 address 192.168.0.1/24
Пример - показать настройки интерфейсов

show int

  НАСТРОЙКА DHCP РЕЛЕЯ
set service dhcp-relay listen-interface eth5
set service dhcp-relay server 172.16.3.2
set service dhcp-relay upstream-interface eth3
image alt text
где:

eth5 - интерфейс, который смотрит в сторону сети, где находятся наши клиенты (на картинке LAN-MSK)
eth3 - интерфейс, который смотрит в сторону сети, где находится наш dhcp server (на картинке SRV-MSK)
172.16.3.2 - адрес нашего dhcp-server’а
 Внимание
На интерфейсе, который смотрит в сторону клиентов должен быть настроен адрес, и не какой попало, а из той сети, которую обслуживает ваш dhcp-server.
Т.е. если на dhcp сервере будет описана раздача для сети 172.16.10.0/24, а вы на eth5 настроите ip адрес из другой сети, то релей работать не будет.

  НАСТРОЙКА DHCP СЕРВЕРА
set service dhcp-server shared-network-name имя_сети subnet x.x.x.x/x
set service dhcp-server shared-network-name имя_сети subnet x.x.x.x/x default-router y.y.y.y
set service dhcp-server shared-network-name имя_сети subnet x.x.x.x/x range имя_диапазона start x.x.x.z1
set service dhcp-server shared-network-name имя_сети subnet x.x.x.x/x range имя_диапазона stop x.x.x.z1
где:

имя имя_сети - любое удобное для вас имя, как правило осмысленное
x.x.x.x/x - подсеть из которой будет происходить раздача адресов
имя_диапазона - любое имя для диапазона, как правило осмысленное
x.x.x.z1 - начальный адрес для раздачи из сети x.x.x.x/x
x.x.x.z2 - конечный адрес для раздачи из сети x.x.x.x/x

  НАСТРОЙКА NAT
set nat source rule номер_правила outbound-interface eth13
set nat source rule номер_правила destination !100.70.2.32-100.70.6.15
set nat source rule номер_правила source address 100.70.2.32/27
set nat source rule номер_правила translation address masquerade
где:

номер_правила - номер, который вы присвоили своему правилу и по которому потом его индетифицируете его для изменений
eth13 - интерфейс через который у нас выходит трафик (смотрит во внешний мир)
!100.70.2.32-100.70.6.15 - исключение диапазона, в данном примере правило не будет применятся к пакетам, который следуют на адреса 100.70.2.32-100.70.6.15
100.70.2.32/27 - исходящая сеть, для которой будет применятся правило (как правило это локальная сеть)
masquerade - наш адрес (в данном случае исходящий) будет преобразовываться на тот адрес, что установлен на outbound интерефейсе (в данном примере eth13)


  НАСТРОЙКА OSPF
set protocols ospf area 0.0.0.0 network 172.16.1.0/30
set protocols ospf area 0.0.0.0 network 172.16.2.0/27
set protocols ospf area 0.0.0.0 network 172.16.3.0/24
set protocols ospf interface eth3 passive
set protocols ospf interface eth5 passive
где:

area 0.0.0.0 - область
172.16.1.0/30, 172.16.2.0/27, 172.16.3.0/24 - сети, которые участвуют в процессе динамической маршрутизации (не забываем добавить сюда сеть, которая связывает нас с другим роутером)
eth3 и eth5 - интерфейсы, которые смотрят в сторону конечных клиентов или серверов и которым анонсирование ospf не нужно, мы их сделали пасивными


  НАСТРОЙКА SSH
установить 22 порт для ssh (если настраивали firewall, то не забываем добавить нужное правило):
set service ssh port 22
установить адрес с которого ssh будет слушать подключения (0.0.0.0 - на всех):
set service ssh listen-address 0.0.0.0
разрешить пользователю test подключаться к ssh:
set service ssh access-control allow user test



  НАСТРОЙКА WIREGUARD
set interfaces wireguard wg1 description
set interfaces wireguard wg1 address x.x.x.x/x
set interfaces wireguard wg1 peer to-wg0 address y.y.y.y
set interfaces wireguard wg1 peer to-wg0 allowed-ips z.z.z.z/z
set interfaces wireguard wg1 peer to-wg0 public-key публичный_ключ2
set interfaces wireguard wg1 peer to-wg0 port порт_подключения
set interfaces wireguard wg1 peer persistent-keepalive интервал
set interfaces wireguard wg1 private-key приватный_ключ1
где:

x.x.x.x/x - адрес внутри туннеля на нашей стороне
y.y.y.y - адрес к которому мы подключаемся для установки туннеля
z.z.z.z/z - сеть (может быть несколько) с которой разрешаются пакеты (маршруты при этом не прокидываются, в отличии от debian или других клиентов)
публичный_ключ2 - публичный ключ от закрытого ключа с другого конца (не от нашего!!!)
порт_подключения - порт, на который мы подключаемся к хосто y.y.y.y
интервал - интервал для поддержания туннеля, чтобы при обрыве он восстановился
приватный_ключ1 - закрытый ключ от нашего узла
Точно такая же настройка требуется на другой стороне, только там надо сгенерировать закрытый ключ и перекинуть туда наш открытый (сгенерированный на основе нашего закрытого ключа)

Генерирование ключа можно произвести на любой машине, где стоит wg, в том числе и на самом vyos. Для генерирования приватного ключа используется команда wg genkey Для генерирования публичного ключа из стандартного ввода вывода wg pubkey 
  Для упрощения жизни можно сгенерировать закрытый ключ в файл (wg genkey > /tmp/priv.key) а затем вывести из него ключ в стандартный ввод-вывод и сгенерировать открытую часть (echo /tmp/priv.key | wg pubkey > /tmp/pub.key) Далее можно открытую часть закинуть на другую сторону, 
  а закрытую использовать в своём конфиге.

  НАСТРОЙКА ИНТЕРФЕЙСОВ
установить на eth0 ip адрес 192.168.0.1/24:

set interface ethernet eth0 address 192.168.0.1/24
установить на eth0 получение адреса по dhcp:

set interface ethernet eth0 address dhcp


  СОЗДАНИЕ/УДАЛЕНИЕ ПОЛЬЗОВАТЕЛЯ
создать пользователя test и установить ему пароль 123456
set system login user test authentication plaintext-password 123456
 Внимание
До применения изменений в системе (до команды commit) вы будете видеть свой пароль в виде текста, после применения вы увидите уже его хеш
удалить пользователя test
del system login user test
создать пользователя test
set system login user test




  СТАТИЧЕСКИЕ МАРШРУТЫ
Пример установить марщрут по умолчанию через 192.168.3.1

set protocols static route 0.0.0.0/0 next-hop 192.168.3.1
Пример удалить маршрут по умолчанию

del protocols static 0.0.0.0/0
